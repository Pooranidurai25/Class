Summary of Day1 session:
========================

Why java?
WORA - PlatformInDependency
IDE - netBeans, eclipse, IJ
Craete project, Package, class
Shortcuts
keywords,datatypes,variables
naming covention standards
Conditional Statements - IF
Iterative/Looping statement - for, while, do while

Summary of July-11-2021
=======================
Conditional Statements
switch case 

jumping Statements - continue, break
                   - continue --> skip that condition alone 
                   - break    --> comes out of the loop totally

class
Object - Physical  entity

1. How it looks? / property/ State  -- variables
   -- colur
   -- isFurry

2. What is it going to do? action/Behaviour -- methods
   --bark
   -- canSmell
   --canJump

Class replicate the object/ Blueprint of the object

method:
========
  method signature:
    access specifier + returnType + methodName + arguments(if any)

  Access specifiers:
To set access levels for classes, variables, methods, and constructors
Method level access specifiers:
-------------------------------
- public
- protected
- package ( default)
- private 

- Passing arguments - Value passed to the methods through arguments
- Returning values  - Values are used from the methods by using return statement


Access Specifier for class : public and package


Instance Variables and Instance Methods :
Accessed only thr objects
So, create an instance and call these components

ClassRoom:
==========
- Create package name as week1.day2
- Create a  new class as "Mobile" under week2.day1
- Create 2 public methods (makeCall() , sendMsg()) with simple print statement
- Create a private method payBills() with simple print statement
- Create main method

- Create object for Mobile class and call the methods using the object
- Execute the class and get the result in console


- Create a new class as MyKid in week2.day1 package
- Create an object for the previous class "Mobile"
- Try to access all the 3 methods of class "Mobile"

ARRAY:
-----
- An array is a collection of similar type of elements which has contiguous memory location-
- We can store only a fixed set of elements in a Java array.
- Array in Java is index-based

Size Limit: We can store only the fixed size of elements in the array. 
            It doesn't grow its size at runtime.
            To solve this problem, collection framework is used in Java which grows automatically.
- length of an array

- Access through - for loop and for each

Printing an array in reverse order:
Sort the array
Print in reverse oeder using for loop

Class room:
==========
1. Create an character array 
2. Print the length of the array
3. Print all the elemnts of the array ( use for and for each loop)
4. Print all the elemnts of the array in reverse order ( use for and for each loop)

To print the last element of the array

Exception: ArrayIndexOutOfBoundsException


STRINGS:
=======

1. Length
2. charAt()
3. indexOf()
4. lastIndexOf()
5. toCharArray()
6. split()




( Yet to be done)
7. replace
8. replace integers, non integers
str.replaceAll("[\\d]", ""); - non integers
str.replaceAll("[\\D]", ""); - integers
9. .equals
9. toLowerCase
10. toUpperCase
11. startsWith()
12. endsWith()

============================================================================================
week2 Day1: 
17-07-2021
==========

RoadMap of Todays class
-----------------------

1. Selenium Introduction
Stable version
Alpha version
Beta version

2. How to set up your work environment?
	Open a Maven Project
	Update with the dependencies required in pom.xml(Project Object Model or POM is the fundamental unit of work in Maven)
        Maven dependendences in your local repository --> .m2
	Force update in case pom.xml throws an error.
	How to take a code for system explorer?
3. System.setProperty()
   WebDriverManager ( importance of WebDriverManager)

		READY TO CODE!!!!

3. Launch a website and interact with the webElements
	A brief look up on the HTML and its elements
	LOCATORS ( 8 Locators)

4. Sample webApplication to implement all the above

	URL: http://leaftaps.com/opentaps/control/main
	Username : demosalesmanager
	Password : crmsfa


How do Selenium locate the web elemnet?
Step 1:
1. Right Click --> Inspect --> developer Tool
2. Press F12 --> developer Tool
3. When Right click is disabled,
       More tools --> developer Tool ( cntrl + shift + I)
       Press F12

Step 2:
Analyse the DOM ( Document Object Model)
HTML Tags:
========

<tags>
<html>   - root tag
<a>      - anchor - hyperlink
<button> - button
<input>  - user can give an input
<div>    - divider tag ( divides the whoilw web page into divisions)
<span>   - similar to div tag
<h1>,<h2>- header 
<title>  - holds the title of that current window
<iframe> - inline frames
<img>    - holds the images
<table>  - Represents the table
<tr>     - table row
<td>     - table column

Structure of HTML element:
=========================
1. Tag        - ( Mandatory)( pink)
2. Attributes - ( Orange)class, id, value, name etc
3. Attribute values - (blue colour) Holds the values for the attributes
4. Text       - (black) Not an attribute

LOCATORS ( 8 locators)
=====================
1. id        - attribute;  Must be Unique; Should not have any autogenerated numbers in it.
                           eg. ext-gen589, ext-gen603
2. name      - attribute;  Must be Unique; Used When I cannot go for the id
3. class     - attribute;  Must be Unique; Used When I cannot go for the id, name
                           Should not have spaces in it
4. linkText  - text()

5. tagName   - <any HTML tags>
6. XPath     - used when none of the attribute can be used
7. Css Selector
8. Partial Link Text - same as text but uses a partial text

STEPS FOR LOGIN TEST CASE
*************************

// Step 1: Download and set the path 
// Step 2: Launch the chromebrowser
// Step 3: Load the URL
// Step 4: Maximise the window
// Step 5: Locate the username and type "demosalesmanager"
// Step 6: Locate the password and type "crmsfa"
// Step 7: Locate the Login button and click it
// Step 8: Verify if the login process is successful
// Step 9: Click CRM/SFA link


STEPS FOR CREATE LEAD TEST CASE
*******************************
// Step 1: Download and set the path 
// Step 2: Launch the chromebrowser
// Step 3: Load the URL
// Step 4: Maximise the window
// Step 5: Locate the username and type "demosalesmanager"
// Step 6: Locate the password and type "crmsfa"
// Step 7: Locate the Login button and click it
// Step 8: Verify if the login process is successful
// Step 9: Click CRM/SFA link

// Step10: Click Leads tab 
// Step11: Click CreateLead
// Step12: Enter Company name
// Step13: Enter FirstName
// Step14: Enter LastName
// Step15: Click CreateLead button


















